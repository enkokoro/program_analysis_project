# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).
# Please check them before you use them.
import triangle_types as module_0
import builtins as module_1


def test_case_0():
    complex_0 = 2307.8 + 2736j
    str_0 = module_0.triangle(complex_0, complex_0, complex_0)
    assert str_0 == "Equilateral triangle"


def test_case_1():
    complex_0 = 247 - 2305j
    int_0 = -2837
    str_0 = module_0.triangle(complex_0, int_0, int_0)
    assert str_0 == "Isosceles triangle"


def test_case_2():
    int_0 = -100
    bool_0 = True
    str_0 = module_0.triangle(int_0, int_0, bool_0)
    assert str_0 == "Isosceles triangle"
    bool_1 = True
    int_1 = -3103
    none_type_0 = None
    str_1 = module_0.triangle(none_type_0, bool_1, none_type_0)
    assert str_1 == "Isosceles triangle"
    str_2 = module_0.triangle(bool_1, bool_1, int_1)
    assert str_2 == "Isosceles triangle"


def test_case_3():
    object_0 = module_1.object()
    int_0 = -2995
    bool_0 = True
    str_0 = module_0.triangle(object_0, int_0, bool_0)
    assert str_0 == "Scalene triangle"


def test_case_4():
    set_0 = set()
    int_0 = 349
    str_0 = module_0.triangle(int_0, set_0, int_0)
    assert str_0 == "Isosceles triangle"
    none_type_0 = None
    str_1 = module_0.triangle(set_0, int_0, none_type_0)
    assert str_1 == "Scalene triangle"
    bool_0 = False
    str_2 = module_0.triangle(int_0, bool_0, int_0)
    assert str_2 == "Isosceles triangle"
