# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).
# Please check them before you use them.
import builtins as module_0
import triangle_types as module_1


def test_case_0():
    object_0 = module_0.object()
    set_0 = {object_0, object_0, object_0}
    str_0 = module_1.triangle(set_0, set_0, set_0)
    assert str_0 == "Equilateral triangle"


def test_case_1():
    bool_0 = False
    bytes_0 = b"\xd0W4\xa1\x16\xb4\xaeA7\x1fy/\x98\x0eV\x84\xa1\x85\xfa"
    str_0 = module_1.triangle(bool_0, bytes_0, bytes_0)
    assert str_0 == "Isosceles triangle"


def test_case_2():
    int_0 = 364
    int_1 = -274
    str_0 = module_1.triangle(int_0, int_0, int_1)
    assert str_0 == "Isosceles triangle"


def test_case_3():
    none_type_0 = None
    bool_0 = True
    str_0 = module_1.triangle(none_type_0, bool_0, none_type_0)
    assert str_0 == "Isosceles triangle"
    bytes_0 = b'\x03\xe0\x95\x8b"\xb1\xe2Q\xa4\x94\xe5\xe0!\xcd\x08e\\\xd1'
    str_1 = module_1.triangle(bytes_0, bytes_0, bytes_0)
    assert str_1 == "Equilateral triangle"


def test_case_4():
    bool_0 = False
    str_0 = module_1.triangle(bool_0, bool_0, bool_0)
    assert str_0 == "Equilateral triangle"
    int_0 = -4475
    int_1 = 1925
    str_1 = module_1.triangle(int_1, int_0, str_0)
    assert str_1 == "Scalene triangle"
    str_2 = module_1.triangle(str_0, int_0, bool_0)
    assert str_2 == "Scalene triangle"
