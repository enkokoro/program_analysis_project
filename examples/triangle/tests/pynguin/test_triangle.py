# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).
# Please check them before you use them.
import triangle as module_0
import builtins as module_1


def test_case_0():
    none_type_0 = None
    var_0 = module_0.triangle(none_type_0, none_type_0, none_type_0)
    assert var_0 == "Equilateral triangle"


def test_case_1():
    object_0 = module_1.object()
    bytes_0 = b"\x8f\x93\xd7\xe3N"
    var_0 = module_0.triangle(object_0, bytes_0, bytes_0)
    assert var_0 == "Isosceles triangle"


def test_case_2():
    bytes_0 = b"?\xe0\x0c\x06SV\x9aq\xda"
    var_0 = module_0.triangle(bytes_0, bytes_0, bytes_0)
    assert var_0 == "Equilateral triangle"
    tuple_0 = ()
    none_type_0 = None
    var_1 = module_0.triangle(none_type_0, none_type_0, tuple_0)
    assert var_1 == "Isosceles triangle"
    var_2 = module_0.triangle(tuple_0, none_type_0, tuple_0)
    assert var_2 == "Isosceles triangle"


def test_case_3():
    bytes_0 = b"l)Q\x1cu\xb77\x06\x8c\x9bl3\xcd`\xab\x92\x9aA"
    bytes_1 = b"!\x03\x15ew\x83\xca\xdd\xe1\x06\x8b\xc3\xe8\xe4\x1fx\x18\x95"
    var_0 = module_0.triangle(bytes_1, bytes_1, bytes_1)
    assert var_0 == "Equilateral triangle"
    none_type_0 = None
    var_1 = module_0.triangle(bytes_0, none_type_0, bytes_0)
    assert var_1 == "Isosceles triangle"
    var_2 = module_0.triangle(bytes_0, bytes_0, bytes_0)
    assert var_2 == "Equilateral triangle"


def test_case_4():
    none_type_0 = None
    var_0 = module_0.triangle(none_type_0, none_type_0, none_type_0)
    assert var_0 == "Equilateral triangle"
    bytes_0 = b"\x1f\xc7\xa61 \x1bo\xb2\xe1Od&uN\xd1\x1a\xbf/\r\xfc"
    var_1 = module_0.triangle(bytes_0, bytes_0, bytes_0)
    assert var_1 == "Equilateral triangle"
    int_0 = 1910
    var_2 = module_0.triangle(var_1, bytes_0, int_0)
    assert var_2 == "Scalene triangle"
    var_3 = module_0.triangle(bytes_0, bytes_0, bytes_0)
    assert var_3 == "Equilateral triangle"
