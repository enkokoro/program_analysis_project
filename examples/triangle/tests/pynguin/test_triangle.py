# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).
# Please check them before you use them.
import triangle as module_0


def test_case_0():
    bytes_0 = b"\xd5\xf2"
    none_type_0 = None
    var_0 = module_0.triangle(bytes_0, bytes_0, none_type_0)
    assert var_0 == "Isosceles triangle"


def test_case_1():
    bool_0 = False
    list_0 = [bool_0]
    set_0 = {bool_0, bool_0}
    tuple_0 = (list_0, set_0, list_0)
    var_0 = module_0.triangle(tuple_0, set_0, bool_0)
    assert var_0 == "Scalene triangle"


def test_case_2():
    bool_0 = False
    list_0 = [bool_0, bool_0]
    none_type_0 = None
    var_0 = module_0.triangle(list_0, none_type_0, list_0)
    assert var_0 == "Isosceles triangle"
    list_1 = []
    var_1 = module_0.triangle(list_1, list_1, list_1)
    assert var_1 == "Equilateral triangle"


def test_case_3():
    int_0 = -3995
    var_0 = module_0.triangle(int_0, int_0, int_0)
    assert var_0 == "Equilateral triangle"
    list_0 = [int_0, int_0]
    var_1 = module_0.triangle(int_0, list_0, list_0)
    assert var_1 == "Isosceles triangle"
    none_type_0 = None
    var_2 = module_0.triangle(list_0, none_type_0, list_0)
    assert var_2 == "Isosceles triangle"
