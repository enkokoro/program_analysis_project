# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).
# Please check them before you use them.
import triangle_types as module_0
import builtins as module_1


def test_case_0():
    int_0 = 1079
    str_0 = module_0.triangle(int_0, int_0, int_0)
    assert str_0 == "Equilateral triangle"


def test_case_1():
    bool_0 = False
    none_type_0 = None
    str_0 = module_0.triangle(bool_0, none_type_0, bool_0)
    assert str_0 == "Isosceles triangle"


def test_case_2():
    int_0 = 307
    str_0 = module_0.triangle(int_0, int_0, int_0)
    assert str_0 == "Equilateral triangle"
    bool_0 = False
    int_1 = 4687
    str_1 = module_0.triangle(bool_0, bool_0, int_1)
    assert str_1 == "Isosceles triangle"


def test_case_3():
    str_0 = "[F0hpjrJ"
    str_1 = module_0.triangle(str_0, str_0, str_0)
    assert str_1 == "Equilateral triangle"
    int_0 = -771
    str_2 = module_0.triangle(str_0, int_0, int_0)
    assert str_2 == "Isosceles triangle"
    bool_0 = False
    str_3 = module_0.triangle(str_1, bool_0, int_0)
    assert str_3 == "Scalene triangle"
    str_4 = module_0.triangle(int_0, int_0, int_0)
    assert str_4 == "Equilateral triangle"


def test_case_4():
    object_0 = module_1.object()
    list_0 = [object_0, object_0]
    none_type_0 = None
    int_0 = 1101
    str_0 = module_0.triangle(list_0, none_type_0, int_0)
    assert str_0 == "Scalene triangle"
